#!/usr/bin/env node

'use strict';

const fs = require('fs')
const stringify = require('javascript-stringify')
const firstRun = !fs.existsSync('picto.config.ts')

if (firstRun) {
  fs.mkdirSync('src/picto/pages', {
    recursive: true
  })
}

require.paths = [process.cwd()+'/node_modules']

require('ts-node').register({
  skipProject: true,
  compilerOptions: {
    "esModuleInterop": true
  }
})

const pictoConfig = {};
const config = require(process.cwd() + '/stencil.config.ts').config;
const pkg = require(process.cwd() + '/package.json');

pkg.scripts['picto:start'] = `stencil build --config picto.config.ts --dev --watch --serve --docs-json docs/build/${config.namespace}/picto/components.json`;
pkg.scripts['picto:build'] = `stencil build --config picto.config.ts --docs-json docs/build/${config.namespace}/picto/components.json`;

fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));

const copy = config.copy || [];

pictoConfig.namespace = config.namespace;

pictoConfig.copy = [...copy, {
  src: 'picto/pages',
  dest: `build/${config.namespace}/picto/pages`
}, {
  src: '../node_modules/@snaptopixel/picto-beta/dist/picto.js',
  dest: `build/${config.namespace}/picto/picto.js`
}]

pictoConfig.devServer = {
  port: 3333,
  historyApiFallback: {
    index: '/index.html'
  }
}

pictoConfig.outputTargets = [{
  type: 'www',
  dir: 'docs',
}]

pictoConfig.srcIndexHtml = 'src/picto/index.html';

if (firstRun) {
  fs.writeFileSync('src/picto/pages/example.md', `
# Example page

This is an example page
`)
  fs.writeFileSync('src/picto/pages/index.md', `
---
- label: Links
- links:
  - label: Home
    icon: home
    sref: /
  - label: Picto
    icon: github
    href: https://github.com/snaptopixel/picto
- label: Examples
- links:
  - label: Submenu
    links:
      - label: Page
        page: example
      - label: Hyperlink
        url: https://www.google.com
---

# Welcome to Picto!

The following files have been autogenerated/updated:

- **picto.config.ts**  
  Customized Stencil config based on your stencil.config.ts 
- **picto/index.html**  
  Base page for this documentation site
- **picto/pages/index.md**
  Content that you're currently reading
- **package.json**
  Added two additional scripts: \`picto:start\` and \`picto:init\`

## Configuring the navigation menu

The index.md page contains yaml "frontmatter" that allows you to add labels, links to urls, pages and submenus. See \`index.md\` to see how it's currently configured.

## Adding pages

You can add any number of arbitrary pages to this site using markdown. 
Simply create the files in the \`picto/pages\` directory and add the links in the menu via the \`page\` property.
`);
}

fs.writeFileSync('src/picto/index.html', `
<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Picto (${config.namespace})</title>
  <script src="/build/${config.namespace}.js"></script>
  <link rel="stylesheet" href="/build/${config.namespace}.css">
  <script src="/build/${config.namespace}/picto/picto.js"></script>
</head>

<body>
  <picto-graph></picto-graph>
</body>

</html>
`.trim())

fs.writeFileSync('picto.config.ts', `export const config = ${stringify(pictoConfig, null, 2)}`)

if (config.plugins) {
  console.warn("[PICTO] Plugins detected, make sure you add them to picto.config.ts")
}